set nocompatible
filetype off

" set the runtime path to include Vundle
set rtp+=~/.vim/bundle/Vundle.vim

" All of your Plugins must be added after the following line
call vundle#begin()

" let Vundle manage Vundle
Plugin 'gmarik/Vundle.vim'

Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'JamshedVesuna/vim-markdown-preview'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-eunuch'
Plugin 'fatih/vim-go'
"Plugin 'kien/rainbow_parentheses.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-syntastic/syntastic'

Plugin 'guns/vim-clojure-static'
Plugin 'tpope/vim-fireplace'
Plugin 'tpope/vim-classpath'
Plugin 'venantius/vim-cljfmt'
Plugin 'venantius/vim-eastwood'

"Plugin 'majutsushi/tagbar'
"Plugin 'Raimondi/delimitMate'
"Plugin 'Valloric/YouCompleteMe'
"Plugin 'godlygeek/tabular'
" vim-autoclose conflicts with YouCompleteMe
"Plugin 'Townk/vim-autoclose'

" All of your Plugins must be added before the following line
call vundle#end()

filetype plugin indent on

" References:
"  http://stevelosh.com/blog/2010/09/coming-home-to-vim/
"  http://amix.dk/vim/vimrc.html
"  https://bitbucket.org/tednaleid/vimrc/src/1316ff2f757e/.vimrc
"  https://github.com/carlhuda/janus/blob/master/janus/vim/tools/janus/after/plugin/NERD_commenter.vim

syntax on
colorscheme desert
set background=dark

set modelines=0
set tabstop=4 shiftwidth=4 expandtab
set softtabstop=4
set autoindent
set smartindent
set showmode
set backspace=indent,eol,start
set ruler
set relativenumber
set number
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch
set noerrorbells

" Do not wrap long lines    
set nowrap

" Always show the status line
set laststatus=2

let userhome=$HOME
let cwd=substitute(getcwd(),userhome,"~","")

" Format the status line
set statusline=
set statusline+=%{HasPaste()}         "Paste mode indicator
set statusline+=%-3.3n                "Buffer number 
set statusline+=%-.15t                "File name (15 chars wide)
set statusline+=%-5.7(%m%r\%)         "Modified and read-only flags
set statusline+=CWD:%-25.75(%{cwd}%)  "Current working directory
set statusline+=%=                    "Left/right separator
set statusline+=%-14.(%c%V,%l/%L%)    "Column(virtual column),line/total lines
set statusline+=\ %<%P                "Percent through file


" Change leader to the comma.
let mapleader = ","
let g:mapleader = ","


" Wild menu configuration
set wildmenu
" See https://stackoverflow.com/questions/9511253/how-to-effectively-use-vim-wildmenu
set wildmode=longest:full,full
"set wildmode=list:longest

" Configure backspace so it acts as it should act. 
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Toggle paste mode on and off
map <leader>pp :setlocal paste!<cr>

" Clear search highlighting
map <leader><space> :noh<cr>

" Convenience!
nnoremap ; :
inoremap jj <Esc>

" Prevents backup/swap files from being created.
set noswapfile
set nobackup
set nowb

" http://stackoverflow.com/a/594947
set sessionoptions+=resize,winpos,winsize

" http://stackoverflow.com/a/7078429
cmap w!! w !sudo tee > /dev/null %

" Easy reloading of Vim configuration.
nnoremap <leader><F5> :source $MYVIMRC<cr>:echo 'sourced '.$MYVIMRC<cr>

" Maps Command-/ to toggle comments in MacVim.
if has("gui_macvim") && has("gui_running")
	map <D-/> <leader>c 
	imap <D-/> <ESC><leader>c <CR>i
else
	map <leader>/ <leader>c <CR>
endif

" Highlight the line the cursor is on when in Insert mode.
"au InsertEnter,InsertLeave * set cursorline!

" Set textwidth for markdown files.
au FileType markdown set tw=72

" http://stackoverflow.com/a/13731714
let &colorcolumn="80,".join(range(120,999),",")
highlight ColorColumn ctermbg=235 guibg=#2c2d27

" Open MacVim maximized.
if has("gui_macvim")
	set fuoptions=maxvert,maxhorz
	" Uncomment the following line for true fullscreen mode.
	"au GUIEnter * set fullscreen
endif

" Update ctags for Go files: http://0value.com/my-Go-centric-Vim-setup
au BufWritePost *.go silent! !ctags -R &	

" http://kennedysgarage.com/articles/nerdtree/
" Automatically show NERDTree when Vim starts.
"autocmd VimEnter * NERDTree
"autocmd VimEnter * wincmd p
" F2 toggles NERDTree
map <F2> :NERDTreeToggle<CR>

" Returns true if paste mode is enabled
function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    en
    return ''
endfunction

"" Clojure
" Jump to definition (requires vim-fireplace)
map <leader>d ]<C-d>

